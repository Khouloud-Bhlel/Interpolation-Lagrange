name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Use Django 4.2 compatible requirements
        pip install Django==4.2.16
        pip install djangorestframework==3.15.2
        pip install django-cors-headers==4.3.1
        pip install python-decouple==3.8
        pip install numpy==1.26.4
        pip install matplotlib==3.8.4
        pip install requests==2.31.0
        pip install whitenoise==6.6.0
        
    - name: Run Django checks
      env:
        SECRET_KEY: 'django-ci-test-key-not-for-production-use-only-12345678901234567890'
        DEBUG: 'False'
        ALLOWED_HOSTS: 'localhost,127.0.0.1,.vercel.app,.now.sh'
        CORS_ALLOWED_ORIGINS: 'https://localhost:3000,https://127.0.0.1:3000'
        DJANGO_SETTINGS_MODULE: 'lagrange_project.settings'
      run: |
        python manage.py check --deploy
        python manage.py collectstatic --noinput --dry-run
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      env:
        SECRET_KEY: 'django-ci-build-key-not-for-production-use-only-12345678901234567890'
        DEBUG: 'False'
        ALLOWED_HOSTS: '.vercel.app,.now.sh'
        CORS_ALLOWED_ORIGINS: 'https://localhost:3000,https://127.0.0.1:3000'
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Comment PR with deployment URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Preview deployment is ready! Check the Vercel dashboard for the URL.'
          })
